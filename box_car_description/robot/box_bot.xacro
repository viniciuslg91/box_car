<?xml version="1.0" ?>
<robot name="box_bot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:include filename="$(find box_car_description)/robot/materials.xacro" />
  <xacro:include filename="$(find box_car_description)/robot/properties.xacro" />
  <xacro:include filename="$(find box_car_description)/robot/macros.xacro" />
  <xacro:include filename="$(find box_car_description)/robot/wheels.xacro" />
  <xacro:include filename="$(find box_car_description)/robot/caster_wheels.xacro" />  
  <xacro:include filename="$(find box_car_description)/robot/box_bot_body.xacro" />
  <xacro:include filename="$(find box_car_description)/robot/box_bot.gazebo" />

  <!-- Extra elemenst for car -->  
  <xacro:include filename="$(find box_car_description)/robot/box_bot_body_steering.xacro" />


  <!--
  <xacro:include filename="$(find box_car_description)/robot/box_bot_propeller.xacro" />
  -->
  
  <xacro:box_bot_body parent_name="${base_name}"/>

  
  <xacro:link_wheel name="right_wheel" r="${wheel_radius}" l="${wheel_width}" incr="${wheel_increment}"/>
  <xacro:joint_wheel name="joint_right_wheel" parent="${base_name}" child="right_wheel" origin_xyz="0 ${base_box_x / 2.0} ${-1.0 * wheel_radius}" />

  <xacro:link_wheel name="left_wheel" r="${wheel_radius}" l="${wheel_width}" incr="${wheel_increment}"/>
  <xacro:joint_wheel name="joint_left_wheel" parent="${base_name}" child="left_wheel" origin_xyz="0 ${-1.0 * base_box_x / 2.0} ${-1.0 * wheel_radius}" />


  <!-- <xacro:caster_wheel parent="chassis" caster_wheel_name="front" origin_xyz="${(base_box_x / 2.0) - wheel_increment} 0 ${-1.0* base_box_x / 2.0}" radius="${wheel_increment}" legth="${dummy_length}"/>
  <xacro:caster_wheel parent="chassis" caster_wheel_name="back" origin_xyz="${(-1.0 *base_box_x / 2.0) + wheel_increment} 0 ${-1.0* base_box_x / 2.0}" radius="${wheel_increment}" legth="${dummy_length}"/>
   -->

  <xacro:box_bot_body_steering parent_name="${base_name}" name="body_steering" origin_xyz="${base_box_x} 0 0"/>


  <link name ='wheel_stir_right'>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${steering_joint_length} ${steering_joint_length} ${steering_joint_length}"/>
      </geometry>
    </visual>
      <inertial>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <mass value="0.001" />
          <inertia ixx="4.166666666666667e-08" ixy="0.0" ixz="0.0" iyy="4.166666666666667e-08" iyz="0.0" izz="4.166666666666667e-08"/>
      </inertial>
  </link>


  <xacro:steering_joint name1='body_steering' name2='wheel_stir_right' posxyz='0 ${1.0 * base_box_x / 2.0} ${-1.0 * wheel_radius}' posrpy='0 0 0' rot='0 0 1' limlow='-0.6108' limhigh='0.6108' limef='${steer_force}' limvel='${steer_vel}' fr='${steer_fric}' dm='${steer_amort}' />

  <xacro:link_wheel name="front_right_wheel" r="${wheel_radius}" l="${wheel_width}" incr="${wheel_increment}"/>
  <xacro:joint_wheel name="joint_front_right_wheel" parent="wheel_stir_right" child="front_right_wheel" origin_xyz="0 ${steering_joint_length} 0" />



  <link name ='wheel_stir_left'>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${steering_joint_length} ${steering_joint_length} ${steering_joint_length}"/>
      </geometry>
    </visual>
      <inertial>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <mass value="0.001" />
          <inertia ixx="4.166666666666667e-08" ixy="0.0" ixz="0.0" iyy="4.166666666666667e-08" iyz="0.0" izz="4.166666666666667e-08"/>
      </inertial>
  </link>

  <xacro:steering_joint name1='body_steering' name2='wheel_stir_left' posxyz='0 ${-1.0 * base_box_x / 2.0} ${-1.0 * wheel_radius}' posrpy='0 0 0' rot='0 0 1' limlow='${steer_limlow}' limhigh='${steer_limhigh}' limef='${steer_force}' limvel='${steer_vel}' fr='${steer_fric}' dm='${steer_amort}' />


  <xacro:link_wheel name="front_left_wheel" r="${wheel_radius}" l="${wheel_width}" incr="${wheel_increment}"/>
  <xacro:joint_wheel name="joint_front_left_wheel" parent="wheel_stir_left" child="front_left_wheel" origin_xyz="0 ${-1.0 * steering_joint_length} 0" />

  <!-- Velocity Config -->
  <!-- <ros2_control name="GazeboSystem" type="system">
    <hardware>
      <plugin>gazebo_ros2_control/GazeboSystem</plugin>
    </hardware>    
    <joint name="body_steering__wheel_stir_right">
      <command_interface name="velocity">
        <param name="min">-10</param>
        <param name="max">10</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="body_steering__wheel_stir_left">
      <command_interface name="velocity">
        <param name="min">-10</param>
        <param name="max">10</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
  </ros2_control> -->

  <!-- Position Config -->
    <ros2_control name="GazeboSystem" type="system">
    <hardware>
      <plugin>gazebo_ros2_control/GazeboSystem</plugin>
    </hardware>    
    <joint name="body_steering__wheel_stir_right">
      <command_interface name="position">
        <param name="min">${steer_limlow}</param>
        <param name="max">${steer_limhigh}</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="body_steering__wheel_stir_left">
      <command_interface name="position">
        <param name="min">${steer_limlow}</param>
        <param name="max">${steer_limhigh}</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
  </ros2_control>


  <gazebo>
    <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
      <!-- <parameters>$(find box_car_description)/config/steering_controller_velocity.yaml</parameters> -->
      <parameters>$(find box_car_description)/config/steering_controller_position.yaml</parameters>
    </plugin>
  </gazebo>


</robot>
